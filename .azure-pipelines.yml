trigger:
  batch: true
  branches:
    include:
    - master
    - releases/*
    - features/*
  paths:
    exclude: [ 'README.md' ]


jobs:

- job: BuildWindows
  pool: {vmImage: 'windows-latest'}

  variables:
    VCPKG_ROCKSDB_INCLUDE_PATH: C:\vcpkg\installed\x64-windows\include\
    VCPKG_ROCKSDB_LIB_PATH: C:\vcpkg\installed\x64-windows\lib\
    vcpkgVersion: 2020.06.15
    vcpkgInstallParamPath: '$(Build.SourcesDirectory)\.azure-pipelines\vcpkg'
    vcpkgBinariesPath: 'C:\Users\VssAdministrator\AppData\Local\vcpkg\archives'
    vcpkg.arch: 'x64'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.10

    # If additional packages are added you should add them to the 'key' to create a new cache entry
    - task: Cache@2
      displayName: Cache vcpkg
      inputs:
        key: rocksdb:x64-windows | "$(vcpkg.arch)" | "$(vcpkgVersion)" | "$(Agent.OS)"
        path: '$(vcpkgBinariesPath)'

    - pwsh: |
        vcpkg install zlib:x64-windows
        vcpkg install bzip2:x64-windows
        vcpkg install lz4:x64-windows
        vcpkg install snappy:x64-windows
        vcpkg install zstd:x64-windows
        vcpkg install rocksdb[bzip2,zlib,lz4,snappy,zstd]:x64-windows --recurse
      displayName: Install rocksdb:x64-windows & compression libraries

    - pwsh: |
        python3 -m pip install --upgrade pip
        pip3 install cython
        pip3 install wheel
        pip3 install pytest
        pip3 install cibuildwheel
      displayName: Prepare python (cython, wheel, delocate)

    - bash: |
        CIBW_BEFORE_BUILD='echo $(python --version) && python -m pip install cython && python -m cython -3 --cplus --fast-fail --annotate rocksdb/_rocksdb.pyx && python ./setup.py build_ext --include-dirs=$(VCPKG_ROCKSDB_INCLUDE_PATH) --library-dirs=$(VCPKG_ROCKSDB_LIB_PATH) --libraries"=shlwapi rpcrt4"' \
        CIBW_BUILD='cp3*-win_amd64' \
        CIBW_PLATFORM=windows cibuildwheel --output-dir wheelhouse .
      displayName: Build rocksdb wheel (cibuildwheel)

    # NOTE: removal of the local plyvel directory is so that it doesn't interfere with import paths
    # from site-packages when running tests
    - script: |
        py -3.10 -m pip install -U wheelhouse/python-rocksdb-cp310-cp310-win_amd64.whl
        rm -r rocksdb
        pytest
      displayName: Install from wheel and test
      continueOnError: true

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Windows'
        pathtoPublish: 'wheelhouse'
      displayName: Publish wheel Windows
